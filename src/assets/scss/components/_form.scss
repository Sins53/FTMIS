.form {
  &-group {
    margin-bottom: $form-group-margin-bottom;
    label {
      color: $gray-32;
    }

    &-dialog {
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;

      border-radius: 2px;
      border: 1px solid $gray-10;
      box-shadow: 0 2px 4px rgba(10, 10, 10, 0.16);
      z-index: 1;
      background-color: white;
      display: none;

      &.show {
        display: block;
      }
      .head {
        padding: 0.5rem 0.75rem;
      }
    }
    &_bordered {
      padding: 1.5rem;
      border-bottom: 1px solid $border-color-gray;
      border-right: 1px solid $border-color-gray;
      margin-right: -1px;
      margin-bottom: -1px;
      height: 100%;
    }

    //tagbox component

    .tagbox {
      border: 1px solid $gray-100;
      border-radius: $input-border-radius;
      display: flex;
      align-items: center;
      padding: 0.25rem;
      .tags {
        max-width: calc(100% / 2);
        margin-right: 0.25rem;
      }
      &:hover {
        cursor: pointer;
      }
      &-count-2 {
        .tags {
          max-width: calc(100% / 3);
        }
      }
      &-count-3 {
        .tags {
          max-width: calc(100% / 4);
        }
      }
      &-singleValue {
        padding-left: $input-padding-x;
        padding-top: calc(0.25rem + 0.125rem);
        padding-bottom: calc(0.25rem + 0.125rem);

        h6 {
          padding-right: 1.5rem;
          font-size: $input-font-size;
          font-weight: 400;
          color: $input-color;
        }
      }
      &:after {
        content: '\e960';
        position: absolute;
        top: 50%;
        right: 0.75rem;
        font-family: 'icomoon';
        @include rfs(8px);
        transform: translateY(50%);
      }
    }
    button {
      white-space: nowrap;
    }
  }
  &-control {
    &:read-only {
      background-color: white;
    }
    &-icon {
      position: relative;
      svg,
      button,
      i {
        position: absolute;
        color: $gray-80 !important;
        @include rfs(20px);
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }
      &.lft {
        .form-control {
          padding-left: 2.25rem;
        }
        svg,
        i {
          left: 0.5rem;
        }
      }
      &.rft {
        .form-control {
          padding-right: 2.25rem;
        }
        svg,
        i {
          right: 0.5rem;
        }
      }
    }
  }

  &-upload {
    i {
      cursor: pointer;
    }

    &-zone {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 3rem;
      border-radius: 0.125rem;
      border: 1px dashed $gray-80;
      background-color: $white;
      margin-bottom: 1rem;

      .icon-container {
        width: 4.5rem;
        height: 4.5rem;
        color: $gray-48;

        svg {
          width: 100%;
          height: 100%;
        }

        [class^='ic-'],
        [class*=' ic-'] {
          font-size: 4.5rem;
        }
      }
    }
  }

  &-title {
    @include rfs(16px);
    font-weight: 500;
    border-bottom: 1px solid $gray-10;
    padding: 1rem 0 0.5rem;
    margin-bottom: 1rem;
    h6 {
      &[aria-collapsed] {
        display: flex;
        align-items: center;
        &:hover {
          cursor: pointer;
        }
        &:before {
          font-family: 'icomoon';
          @include rfs(24px);
          color: $blue-60;
        }
      }
      &[aria-collapsed='true'] {
        &:before {
          content: '\e975';
        }
      }
      &[aria-collapsed='false'] {
        &:before {
          content: '\e977';
        }
      }
    }
  }
  &-row {
    @extend .row;
  }
  &-check {
    margin-bottom: 0;
    min-height: unset;
    &-input {
      cursor: pointer;

      &-md {
        width: 1.25rem;
        height: 1.25rem;
        &[type='checkbox'] {
          border-radius: 0.125rem;
        }
      }
      &-lg {
        width: 1.5rem;
        height: 1.5rem;
      }
    }
    &-label {
      cursor: pointer;
      margin-bottom: 0;
    }
    &-active {
      padding: 0.5rem 1rem;
      background-color: $blue-96;
    }
  }

  &-info {
    @include rfs(12px);
    color: $gray-48;
  }
  &-switch {
    input {
      background-color: $red-88;
      border: none;
      // height: 1rem;
      // width: 2rem;
      // box-shadow: inset 0px 1px 2px $gray-80;
      + .form-check-label {
        color: $red-200;
      }

      &:checked {
        background-color: $green-88;
        // height: 1rem;
        // width: 2rem;
        ~ .form-check-label {
          color: $green-100;
        }
      }
      &:focus {
        box-shadow: inset 0px 1px 2px $gray-80;
      }
    }
  }
  &-file {
    display: flex;
    align-items: center;
    input {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    button {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}
.rtl {
  direction: rtl;
}

.textarea {
  &-count {
    text-align: right;
    margin-top: 0.5rem;
    display: block;
    @include rfs(12px);
    color: $gray-400;
  }
}

//Datepicker
.react-datepicker {
  &-wrapper {
    width: 100%;
  }
  &__input {
    &-container {
      input {
        width: 100%;
        padding: $input-padding-y $input-padding-x;
        border: 1px solid $input-border-color;
        border-radius: 2px;
        line-height: $input-line-height;
        @include rfs(14px);
        &:focus {
          outline: none;
          color: $gray-16;
        }
        &:read-only {
          background-color: $input-disabled-bg;
        }
      }
    }
  }
}

.input {
  &-withLabel {
    position: relative;
    width: 100%;
    label {
      position: absolute;
      color: $gray-56;
      top: 50%;
      transform: translateY(-50%);
      padding-left: 1rem;
      margin: 0;
    }
    input {
      padding-left: 4rem;
    }
  }
}
textarea {
  resize: none;
}
input[type='time'] {
  &::-webkit-calendar-picker-indicator {
    // background: none;
    @include rfs(14px);
    filter: invert(0.7);
  }
}

.file {
  &-upload {
    position: relative;
    height: 250px;
    padding: 1rem;
    border: 2px dotted $gray-100;
    transition: border-color 0.25s $time-func-1;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.25rem;
    position: relative;

    label {
      text-align: center;
      height: 100%;
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;

      &.inline {
        flex-direction: row;

        [class^='ic-'],
        [class*=' ic-'] {
          font-size: 0.75rem;
        }
      }
    }

    .close {
      color: $red;
      position: absolute;
      top: 0.5rem;
      right: 0.5rem;
    }
    &-sm {
      @extend .file-upload;
      height: 180px;
    }
  }

  &-image {
    height: 56px;
    width: 87.5px;
    object-fit: contain;
    border-radius: 4px;
    &__square {
      height: 180px;
      img {
        width: 100%;
        height: 100%;
        object-fit: contain;
      }
    }
  }
}
